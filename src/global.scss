/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import '@ionic/angular/css/core.css';

/* Basic CSS for apps built with Ionic */
@import '@ionic/angular/css/normalize.css';
@import '@ionic/angular/css/structure.css';
@import '@ionic/angular/css/typography.css';

/* Optional CSS utils that can be commented out */
@import '@ionic/angular/css/padding.css';
@import '@ionic/angular/css/float-elements.css';
@import '@ionic/angular/css/text-alignment.css';
@import '@ionic/angular/css/text-transformation.css';
@import '@ionic/angular/css/flex-utils.css';
@import '@ionic/angular/css/display.css';

/**
 * Ionic Dark Palette
 * -----------------------------------------------------
 * For more information, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

@import '@ionic/angular/css/palettes/dark.always.css';
/* @import '@ionic/angular/css/palettes/dark.class.css'; */
/* @import '@ionic/angular/css/palettes/dark.system.css'; */

// Custom Auth Styles
.auth-page {
  ion-content {
    --background: #2c2c2e;
  }
}

// Toast Custom Styles
.toast-success {
  --background: #34c759;
  --color: #ffffff;
}

// Global iOS DateTime Fixes
ion-datetime {
  // Ensure proper display on all platforms
  width: 100% !important;
  max-width: 100% !important;
  
  // iOS-specific calendar fixes
  &.ios {
    // Ensure full width
    width: 100% !important;
    max-width: 100% !important;
    
    // Remove default padding that might constrain width
    --padding-top: 0;
    --padding-bottom: 0;
    --padding-start: 0;
    --padding-end: 0;
    
    // Fix the internal structure to expand fully
    .datetime-calendar {
      width: 100% !important;
      max-width: 100% !important;
    }
    
    .datetime-body {
      width: 100% !important;
      max-width: 100% !important;
    }
    
    .calendar-body {
      width: 100% !important;
      max-width: 100% !important;
      padding: 8px !important;
    }
    
    // Fix the calendar month container
    .calendar-month {
      width: 100% !important;
      max-width: 100% !important;
    }
    
    // Fix the calendar grid layout
    .calendar-month-grid {
      display: grid !important;
      grid-template-columns: repeat(7, 1fr) !important;
      gap: 4px !important;
      width: 100% !important;
      max-width: 100% !important;
      padding: 0 !important;
    }
    
    // Fix individual day cells
    .calendar-day {
      width: 100% !important;
      height: auto !important;
      aspect-ratio: 1 !important;
      min-width: unset !important;
      min-height: unset !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      margin: 0 !important;
      padding: 8px !important;
      font-size: 0.9rem !important;
    }
    
    // Ensure week header is visible and full width
    .calendar-week-days {
      display: grid !important;
      grid-template-columns: repeat(7, 1fr) !important;
      gap: 4px !important;
      width: 100% !important;
      padding: 0 0 8px 0 !important;
      
      .calendar-day-of-week {
        text-align: center !important;
        font-size: 0.75rem !important;
        color: var(--ion-color-medium) !important;
        width: 100% !important;
      }
    }
    
    // Fix month header
    .calendar-header {
      padding: 12px 16px !important;
      width: 100% !important;
      
      .calendar-month-year {
        font-size: 1rem !important;
        font-weight: 600 !important;
      }
    }
    
    // Navigation buttons
    .calendar-navigation {
      width: 100% !important;
      
      .calendar-next-prev {
        ion-button {
          --padding-start: 8px;
          --padding-end: 8px;
        }
      }
    }
    
    // Ensure picker columns are full width
    ion-picker-column-internal {
      width: 100% !important;
      max-width: 100% !important;
    }
  }
  
  // Android/MD specific adjustments if needed
  &.md {
    width: 100% !important;
    max-width: 100% !important;
    
    .calendar-month-grid {
      padding: 0 4px;
    }
  }
}

// Additional fixes for datetime wrappers
.datetime-wrapper {
  width: 100% !important;
  max-width: 100% !important;
  
  ion-datetime {
    width: 100% !important;
    max-width: 100% !important;
  }
}

// Fix for modal datetime containers
ion-modal {
  .datetime-section {
    width: 100% !important;
    
    .datetime-wrapper {
      width: 100% !important;
      
      ion-datetime {
        width: 100% !important;
        max-width: 100% !important;
      }
    }
  }
}

// iOS-specific datetime full-width fix using CSS variables
.ios ion-datetime {
  --width: 100% !important;
  --max-width: 100% !important;
  --min-width: 100% !important;
  
  // Override any constraining widths
  &[presentation="date"] {
    --width: 100% !important;
    --max-width: 100% !important;
    width: 100% !important;
    max-width: 100% !important;
  }
}

// Ensure modals don't constrain datetime width
ion-modal {
  --width: 100%;
  
  ion-content {
    --width: 100%;
    
    .datetime-wrapper {
      width: 100% !important;
      max-width: 100% !important;
    }
  }
}

.toast-danger {
  --background: #ff3b30;
  --color: #ffffff;
}

// Modern Header Styles - Premium Design
ion-app ion-header {
  position: relative;
  overflow: hidden;
  
  ion-toolbar {
    --background: transparent !important;
    --color: #ffffff !important;
    --border-width: 0 !important;
    --padding-top: 4px;
    --padding-bottom: 4px;
    --min-height: 64px;
    position: relative;
    
    // Premium gradient background
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, #007aff 0%, #5856d6 100%);
      z-index: -2;
    }
    
    // Subtle pattern overlay
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: 
        radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.05) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.05) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.03) 0%, transparent 50%);
      z-index: -1;
    }
  }
  
  // Enhanced title styling
  ion-title {
    color: #ffffff !important;
    --color: #ffffff !important;
    font-weight: 600;
    font-size: 20px;
    letter-spacing: 0.3px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }
  
  // Enhanced button styling
  ion-button {
    --color: #ffffff !important;
    color: #ffffff !important;
    --padding-start: 12px;
    --padding-end: 12px;
    transition: all 0.2s ease;
    
    &:hover {
      transform: scale(1.05);
      opacity: 0.9;
    }
    
    &:active {
      transform: scale(0.95);
    }
    
    .button-native {
      color: #ffffff !important;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 12px;
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
    }
    
    ion-icon {
      color: #ffffff !important;
      --color: #ffffff !important;
      font-size: 24px;
    }
  }
  
  // Menu button special styling
  ion-menu-button {
    --color: #ffffff !important;
    color: #ffffff !important;
    
    .button-native {
      background: rgba(255, 255, 255, 0.1);
      border-radius: 12px;
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
    }
  }
  
  // Buttons container styling
  ion-buttons {
    ion-button {
      --color: #ffffff !important;
      color: #ffffff !important;
      
      .button-native {
        color: #ffffff !important;
      }
      
      ion-icon {
        color: #ffffff !important;
        --color: #ffffff !important;
      }
    }
  }
  
  // Add subtle shadow to header
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  
  // Subtle entrance animation
  animation: headerSlideDown 0.4s ease-out;
}

// Header Animations
@keyframes headerSlideDown {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

// Floating animation for header elements
@keyframes headerFloat {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-2px);
  }
}

// Add floating animation to title on hover
ion-app ion-header ion-title {
  transition: all 0.3s ease;
  
  &:hover {
    animation: headerFloat 2s ease-in-out infinite;
  }
}

// Ensure menu buttons are white and visible across all platforms
ion-app ion-menu-button {
  --color: #ffffff !important;
  color: #ffffff !important;
  
  &::part(native) {
    color: #ffffff !important;
  }
  
  &::part(icon) {
    color: #ffffff !important;
  }
}

// Override Ionic's button-native color for menu buttons
ion-app ion-menu-button .button-native {
  color: #ffffff !important;
}

// Ensure menu button icons are white
ion-app ion-menu-button ion-icon {
  color: #ffffff !important;
  --color: #ffffff !important;
}

// Ensure back buttons are also white
ion-app ion-back-button {
  --color: #ffffff !important;
  color: #ffffff !important;
  
  &::part(native) {
    color: #ffffff !important;
  }
  
  &::part(icon) {
    color: #ffffff !important;
  }
}

::ng-deep .button-inner {
  color: #ffffff !important;
}

// Ensure all header buttons are visible across all platforms
ion-app ion-header ion-button {
  --color: #ffffff !important;
  color: #ffffff !important;
  
  // Target button inner content
  .button-native {
    color: #ffffff !important;
  }
  
  // Target any icons
  ion-icon {
    color: #ffffff !important;
    --color: #ffffff !important;
  }
}

// Override any theme-specific toolbar styles
:root.ios ion-app ion-header ion-toolbar,
:root.md ion-app ion-header ion-toolbar {
  --background: #3a3a3c !important;
  --color: #ffffff !important;
  --border-color: #48484a !important;
  
  // Ensure titles are white on all platforms
  ion-title {
    color: #ffffff !important;
    --color: #ffffff !important;
  }
  
  // Ensure buttons and icons are white on all platforms
  ion-button {
    --color: #ffffff !important;
    color: #ffffff !important;
    
    .button-native {
      color: #ffffff !important;
    }
    
    ion-icon {
      color: #ffffff !important;
      --color: #ffffff !important;
    }
  }
  
  // Ensure menu buttons are white on all platforms
  ion-menu-button {
    --color: #ffffff !important;
    color: #ffffff !important;
    
    &::part(native) {
      color: #ffffff !important;
    }
    
    &::part(icon) {
      color: #ffffff !important;
    }
  }
  
  // Target any standalone icons
  ion-icon {
    color: #ffffff !important;
    --color: #ffffff !important;
  }
}

// Additional high-specificity styles for top menu bar
// Ensure all header elements are consistently white
ion-header ion-toolbar ion-title,
ion-modal ion-header ion-toolbar ion-title,
ion-page ion-header ion-toolbar ion-title {
  color: #ffffff !important;
  --color: #ffffff !important;
}

ion-header ion-toolbar ion-button,
ion-modal ion-header ion-toolbar ion-button,
ion-page ion-header ion-toolbar ion-button {
  --color: #ffffff !important;
  color: #ffffff !important;
}

ion-header ion-toolbar ion-button ion-icon,
ion-modal ion-header ion-toolbar ion-button ion-icon,
ion-page ion-header ion-toolbar ion-button ion-icon {
  color: #ffffff !important;
  --color: #ffffff !important;
}

ion-header ion-toolbar ion-buttons ion-button,
ion-modal ion-header ion-toolbar ion-buttons ion-button,
ion-page ion-header ion-toolbar ion-buttons ion-button {
  --color: #ffffff !important;
  color: #ffffff !important;
}

ion-header ion-toolbar ion-buttons ion-button ion-icon,
ion-modal ion-header ion-toolbar ion-buttons ion-button ion-icon,
ion-page ion-header ion-toolbar ion-buttons ion-button ion-icon {
  color: #ffffff !important;
  --color: #ffffff !important;
}

// Override any deep styling that might interfere
::ng-deep ion-header ion-toolbar {
  --background: #3a3a3c !important;
  --color: #ffffff !important;
  
  ion-title {
    color: #ffffff !important;
  }
  
  ion-button {
    --color: #ffffff !important;
    
    ion-icon {
      color: #ffffff !important;
    }
  }
}

// Status Bar styling for iOS
@media (max-width: 767px) {
  .ios {
    .login-container {
      padding-top: env(safe-area-inset-top);
    }
  }
}

/**
 * iPhone Layout Fixes - Comprehensive Safe Area Support
 * -----------------------------------------------------
 * These styles address layout issues on iPhone devices where content
 * is being cut off and headers/footers are not displayed properly.
 * 
 * Key Issues Addressed:
 * 1. Safe area insets for iPhone X+ models with notches/dynamic islands
 * 2. Dynamic viewport height handling for Safari's address bar behavior
 * 3. Proper header positioning to avoid conflicts with iOS status bar
 * 4. Content overflow prevention and proper scrolling boundaries
 * 
 * Technical Implementation:
 * - Uses CSS environment variables (env()) for safe area insets
 * - Implements dynamic viewport height calculations with fallbacks
 * - Ensures headers and footers are positioned within visible areas
 * - Provides responsive breakpoints for different iPhone screen sizes
 */

/* Root-level safe area variables for iPhone compatibility */
:root {
  /* Safe area inset variables with fallbacks for older devices */
  --safe-area-inset-top: env(safe-area-inset-top, 0px);
  --safe-area-inset-right: env(safe-area-inset-right, 0px);
  --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
  --safe-area-inset-left: env(safe-area-inset-left, 0px);
  
  /* Dynamic viewport height handling for iPhone Safari */
  --viewport-height: 100vh;
  --dynamic-viewport-height: 100dvh; /* Uses dynamic viewport when available */
  --small-viewport-height: 100svh; /* Uses small viewport when available */
}

/* iPhone-specific safe area handling */
@supports (padding: env(safe-area-inset-top)) {
  :root {
    --safe-area-inset-top: env(safe-area-inset-top);
    --safe-area-inset-right: env(safe-area-inset-right);
    --safe-area-inset-bottom: env(safe-area-inset-bottom);
    --safe-area-inset-left: env(safe-area-inset-left);
  }
}

/* Main app container with safe area support */
ion-app {
  /* Apply safe area padding on all sides including bottom */
  padding-top: var(--safe-area-inset-top);
  padding-right: var(--safe-area-inset-right);
  padding-bottom: var(--safe-area-inset-bottom); /* Apply bottom safe area */
  padding-left: var(--safe-area-inset-left);
  
  /* Use dynamic viewport height when available, fallback to standard vh */
  height: 100vh;
  min-height: 100vh;
  position: fixed;
  width: 100%;
  overflow: hidden;
  background: var(--ion-background-color, #000); /* Ensure background matches app theme */
}

/* Page-level safe area handling */
.ion-page {
  /* Ensure pages fill the available space */
  padding: 0;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  contain: layout size style;
}

/* Header positioning fixes for iPhone */
ion-header {
  /* Ensure headers don't get hidden behind notch or status bar */
  position: relative;
  z-index: 1000;
  
  /* Account for iPhone status bar and notch area */
  ion-toolbar {
    /* Add padding for iPhone notch/dynamic island */
    padding-top: 0; /* Safe area already handled at app level */
    min-height: 44px; /* iOS standard toolbar height */
  }
}

/* Content area positioning and scrolling fixes */
ion-content {
  /* Critical: Ensure content respects safe areas */
  --offset-top: 0;
  --offset-bottom: 0;
  
  /* Add safe area padding to content */
  --padding-bottom: var(--safe-area-inset-bottom, 0);
  
  /* Proper overflow handling for iPhone */
  position: relative;
  flex: 1;
  
  /* Ensure the scroll element respects safe areas */
  &::part(scroll) {
    padding-bottom: var(--safe-area-inset-bottom, 0);
  }
}

/* Additional ion-content safe area handling */
.ios ion-content {
  /* iOS-specific safe area handling */
  --padding-bottom: env(safe-area-inset-bottom);
}

/* Ensure content with footers handle safe areas properly */
ion-content.has-footer {
  --padding-bottom: calc(56px + var(--safe-area-inset-bottom, 0px));
}

/* Fixed elements positioning for iPhone */
.ion-page [slot="fixed"],
ion-fab[slot="fixed"] {
  /* Ensure fixed elements respect safe areas */
  bottom: calc(var(--safe-area-inset-bottom) + 16px);
  right: calc(var(--safe-area-inset-right) + 16px);
}

/* Footer positioning with safe area support */
ion-footer {
  padding-bottom: var(--safe-area-inset-bottom, 0);
}

/* Tab bar safe area handling */
ion-tab-bar {
  padding-bottom: var(--safe-area-inset-bottom, 0);
  contain: none;
}

/* iPhone-specific responsive breakpoints */
/* iPhone SE and smaller devices */
@media screen and (max-width: 375px) and (max-height: 667px) {
  .ion-page {
    font-size: 14px; /* Slightly smaller text for compact screens */
  }
  
  ion-header ion-toolbar {
    min-height: 40px; /* Slightly smaller toolbar for compact devices */
  }
}

/* Standard iPhone sizes (iPhone 12, 13, 14) */
@media screen and (min-width: 375px) and (max-width: 428px) and (min-height: 667px) {
  .ion-page {
    font-size: 16px;
  }
}

/* iPhone Pro Max and larger devices */
@media screen and (min-width: 428px) and (max-height: 932px) {
  .ion-page {
    font-size: 16px;
  }
}

/* Landscape orientation handling */
@media screen and (orientation: landscape) and (max-height: 430px) {
  /* Adjust layout for iPhone landscape mode */
  ion-header {
    position: sticky;
    top: 0;
  }
  
  .ion-page {
    /* Account for smaller height in landscape */
    height: calc(100vh - var(--safe-area-inset-top) - var(--safe-area-inset-bottom));
  }
}

// Session Members Modal - Full Screen Styling
.session-members-fullscreen {
  --width: 100vw;
  --height: 100vh;
  --min-width: 100vw;
  --max-width: 100vw;
  --min-height: 100vh;
  --max-height: 100vh;
  --border-radius: 0;
  --box-shadow: none;
  
  .modal-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    border-radius: 0;
  }
}

:host(.checkbox-checked) .checkbox-icon, :host(.checkbox-indeterminate) .checkbox-icon {
  background-color: var(--primary);
  border-color: var(--primary);
}

// iOS PWA Navigation Fixes
@media (display-mode: standalone) {
  // Prevent weird sliding animations on iOS
  ion-router-outlet {
    contain: size layout style;
  }
  
  // Smooth page transitions
  .ion-page {
    position: absolute;
    width: 100%;
    height: 100%;
    contain: layout size style;
  }
  
  // Fix for iOS Safari navigation gestures
  .ios {
    ion-router-outlet {
      overflow: hidden;
    }
    
    // Disable swipe back gesture that might conflict
    ion-nav {
      --swipe-back: false;
    }
  }
}

// Additional iOS navigation fixes
.ios {
  // Prevent iOS rubber band scrolling that might trigger navigation
  ion-content {
    --overflow: hidden;
    
    &::part(scroll) {
      overscroll-behavior: contain;
      -webkit-overflow-scrolling: touch;
    }
  }
  
  // Ensure menu toggle doesn't trigger weird animations
  ion-menu-toggle {
    touch-action: manipulation;
  }
  
  // Fix for iOS Safari swipe gestures
  body {
    overscroll-behavior-x: none;
  }
}

// Fix scroll wheel on non-iPhone devices (Windows, Android, etc.)
// This ensures proper scrolling behavior for desktop and non-iOS mobile devices
ion-content {
  // Enable standard scrolling for all platforms
  &::part(scroll) {
    overflow-y: auto !important;
    overflow-x: hidden !important;
    overscroll-behavior-y: auto;
    -webkit-overflow-scrolling: touch;
    
    // Ensure scroll wheel works on desktop
    &::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    
    &::-webkit-scrollbar-track {
      background: rgba(0, 0, 0, 0.1);
      border-radius: 4px;
    }
    
    &::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.3);
      border-radius: 4px;
      
      &:hover {
        background: rgba(0, 0, 0, 0.5);
      }
    }
  }
}

// Desktop-specific scrolling fixes
@media (hover: hover) and (pointer: fine) {
  // Desktop devices with mouse/trackpad
  ion-content {
    &::part(scroll) {
      // Ensure smooth scrolling on desktop
      scroll-behavior: smooth;
      
      // Fix for Windows scroll wheel
      overflow-y: auto !important;
      overflow-x: hidden !important;
    }
  }
  
  // Ensure all scrollable containers work with mouse wheel
  .scroll-y,
  .scrollable {
    overflow-y: auto !important;
    overflow-x: hidden !important;
    -webkit-overflow-scrolling: touch;
  }
}

// Non-iOS mobile devices (Android, etc.)
.md ion-content {
  &::part(scroll) {
    overflow-y: auto !important;
    overflow-x: hidden !important;
    overscroll-behavior-y: auto;
  }
}

// Windows-specific fixes
.plt-windows {
  ion-content {
    &::part(scroll) {
      overflow-y: auto !important;
      overflow-x: hidden !important;
      scroll-behavior: auto; // Instant scrolling for better wheel response
    }
  }
}

// Update Modal Styles
.update-modal {
  --backdrop-opacity: 0.6;
  
  .modal-wrapper {
    background: transparent;
  }
  
  .ion-page {
    background: transparent;
  }
}